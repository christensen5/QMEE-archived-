getwd()
ls
MyData = read.csv("../Data/trees.csv")
ls()
head(MyData)
str(MyData)
MyData = read.csv("../Data/trees.csv", header=T)
MyData
head(MyData)
MyData = read.csv("../Data/trees.csv", header=TRUE)
head(MyData)
MyData = read.csv("../Data/trees.csv", sep=",", header=TRUE)
head(MyData)
MyData = read.csv("../Data/trees.csv", sep='',', header=TRUE)
MyData = read.csv("../Data/trees.csv", sep='',',# header=TRUE)
MyData = read.csv("../Data/trees.csv", sep=',', header=TRUE)
head(MyData)
write.csv(MyData, "../Results/MyData.csv")
dir("../Results)")
dir("../Results/")
write.table(MyData[1,], file = "../Results/MyData.csv", append = TRUE)
write.csv(MyData, "../Results/MyData.csv", row.names = TRUE)
write.csv(MyData, "../Results/MyData.csv", col.names = FALSE)
?copy
MyData <- read.csv("../Data/trees.csv", header = TRUE) #import with headers
getwd()
source("basic_io.R")
?srouce
?source
source("boilerplate.R")
class(MyFunction)
MyFunctio('a','b')
MyFunction('a','b')
out = MyFunction('a','b')
out
source("TreeHeight.R")
# Define the input data file.
InputFile = read.csv("../Data/trees.csv",col.names=TRUE,row.names=FALSE)
# Define the input data file.
InputFile = read.csv("../Data/trees.csv",col.names=TRUE,row.names=FALSE)
# Define the input data file.
InputFile = read.csv("../Data/trees.csv")
col.names(InputFile)
col.names(InputFile,header=TRUE)
# Define the input data file.
InputFile = read.csv("../Data/trees.csv",header=TRUE)
View(InputFile)
View(InputFile)
c(numTrees,~) <- dim(InputFile)
dim(InputFile)
(x,y) = dim(InputFile)
dim(InputFile)[0]
dim(InputFile)[1
]
MyData
MyData[,1]
MyData
InputFile[,1]
dim(InputFile)
[]
c()
View(InputFile)
View(MyData)
View(InputFile)
rm('InputFile','MyData')
Input.File = read.csv("../Data/trees.csv", header = TRUE)
# Run TreeHeight on each entry in the input file, saving the outputs as a column vector.
Heights = c();
for (i in 1:dim(Input.File)[1]) {
Heights = cbind(Heights, TreeHeight(Input.File[i,3],Input.File[i,2]))
}
dim(Heights)
for (i in 1:dim(Input.File)[1]) {
Heights = rbind(Heights, TreeHeight(Input.File[i,3],Input.File[i,2]))
}
dim(Heights)
rm Heights
rm 'Heights''
rm("Heights")
for (i in 1:dim(Input.File)[1]) {
Heights = rbind(Heights, TreeHeight(Input.File[i,3],Input.File[i,2]))
}
Heights = c();
for (i in 1:dim(Input.File)[1]) {
Heights = rbind(Heights, TreeHeight(Input.File[i,3],Input.File[i,2]))
}
dim(Heights)
Output.Frame = cbind(Input.File, Heights) #Appent t
dim Input.FIle
dim Input.File
dim(Input.File)
dim(Output.Frame)
head(Input.File)
head(Output.Frame)
Tree.Height = c();
for (i in 1:dim(Input.File)[1]) {
Tree.Height = rbind(Tree.Height, TreeHeight(Input.File[i,3],Input.File[i,2]))
}
Output.Frame = cbind(Input.File, Tree.Height)
write.csv("Output.Frame", "../Results/TreeHts.csv")
write.csv(Output.Frame, "../Results/TreeHts.csv")
help(commandArgs)
source("TreeHeight.R")
TreeHeight.R
TreeHeight()
help(commandArgs)
commandArgs()
# Define the input data file.
Input.File = read.csv("../Data/trees.csv", header = TRUE)
rm ('Input.File','Output.Frame')
# Run TreeHeight on each entry in the input file, saving the outputs as a column vector.
Tree.Height = c();
commandArgs
commandArgs()
return(height)
debugSource('~/Documents/QMEE/Week3/Code/get_TreeHeight.R')
commandArgs()
commandArgs()
commandArgs(trailingOnly=TRUE)
source('~/Documents/QMEE/Week3/Code/TreeHeight.R')
source('~/Documents/QMEE/Week3/Code/TreeHeight.R')
source('~/Documents/QMEE/Week3/Code/TreeHeight.R')
debugSource('~/Documents/QMEE/Week3/Code/get_TreeHeight.R')
debugSource('~/Documents/QMEE/Week3/Code/get_TreeHeight.R')
?tail
?Str_sub
?str_sub
?substr
substr("123456",1,3)
Input.Dir="test.csv"
substr(Input.Dir,1,nchar(Input.Dir)-4)
rm('Input.Dir')
rm('')
rm("")
rm("*")
rm(ls())
rm(ls())
ls9)
ls()
rm(ls())
rm([ls()])
rm(ls()[])
rm(ls()[,])
rm('Input.Frame','Output.Dir')
rm('Input.Frame','Output.Dir')
source('~/Documents/QMEE/Week3/Code/TreeHeight.R')
source('~/Documents/QMEE/Week3/Code/get_TreeHeight.R')
source("control.R")
control()
## for loop using a vector
v1 <- c("a","bc","def")
source('~/Documents/QMEE/Week3/Code/control.R')
sudo apt-get install r-cran-ggplot2 r-cran-plyr r-cran-reshape2
